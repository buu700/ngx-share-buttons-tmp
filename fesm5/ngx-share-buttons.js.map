{"version":3,"file":"ngx-share-buttons.js.map","sources":["ng://@ngx-share/buttons/lib/share-buttons.ts","ng://@ngx-share/buttons/lib/expand-button.ts","ng://@ngx-share/buttons/lib/share-buttons.module.ts"],"sourcesContent":["import { Component, Input, Output, OnInit, OnDestroy, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\nimport { ShareService, ShareButtonsConfig, SHARE_BUTTONS } from '@ngx-share/core';\nimport { Observable, BehaviorSubject, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\ninterface ButtonsState {\n  includedButtons?: string[];\n  excludedButtons?: string[];\n  userButtons?: string[];\n  selectedButtons?: string[];\n  expanded?: boolean;\n  shownCount?: number;\n  moreIcon?: any;\n  lessIcon?: any;\n}\n\n@Component({\n  selector: 'share-buttons',\n  templateUrl: './share-buttons.html',\n  styleUrls: ['./share-buttons.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ShareButtons implements OnInit, OnDestroy {\n\n  state$: Observable<ButtonsState>;\n  private _state$ = new BehaviorSubject<ButtonsState>({\n    includedButtons: [],\n    excludedButtons: [],\n    userButtons: [],\n    selectedButtons: [],\n    expanded: true,\n    shownCount: Object.keys(SHARE_BUTTONS).length\n  });\n\n  private _configSub$ = Subscription.EMPTY;\n\n  @Input() theme = this._share.config.theme;\n\n  @Input('include') set includedButtons(includedButtons: string[]) {\n    this.updateState({includedButtons});\n  }\n\n  @Input('exclude') set excludedButtons(excludedButtons: string[]) {\n    this.updateState({excludedButtons});\n  }\n\n  @Input('show') set shownButtons(shownCount: number) {\n    this.updateState({shownCount});\n  }\n\n  /** The sharing link */\n  @Input() url: string;\n\n  /** The title parameter */\n  @Input() title: string;\n\n  /** The description parameter */\n  @Input() description: string;\n\n  /** The image parameter for sharing on Pinterest */\n  @Input() image: string;\n\n  /** The tags parameter for sharing on Twitter and Tumblr */\n  @Input() tags: string;\n\n  /** Sets meta tags from document head, useful when SEO is available */\n  @Input() autoSetMeta: boolean;\n\n  /** Show buttons icons */\n  @Input() showIcon = true;\n\n  /** Show buttons text */\n  @Input() showText = false;\n\n  /** Show sharing count */\n  @Input() showCount = false;\n\n  /** Buttons size */\n  @Input() size = 0;\n\n  /** Share count event */\n  @Output() count = new EventEmitter<number>();\n\n  /** Share dialog opened event */\n  @Output() opened = new EventEmitter<string>();\n\n  /** Share dialog closed event */\n  @Output() closed = new EventEmitter<string>();\n\n  constructor(private _share: ShareService) {\n  }\n\n  ngOnInit() {\n    this.state$ = this._state$.pipe(\n      map((state: ButtonsState) => {\n        // Use component include buttons, otherwise fallback to global include buttons\n        const includedButtons = state.includedButtons.length ? state.includedButtons : state.userButtons;\n        const userButtons = includedButtons.filter((btn) => state.excludedButtons.indexOf(btn) < 0);\n        const selectedButtons = userButtons.slice(0, state.expanded ? userButtons.length : state.shownCount);\n        return {\n          userButtons,\n          selectedButtons,\n          expanded: state.expanded,\n          shownCount: state.shownCount,\n          moreIcon: state.moreIcon,\n          lessIcon: state.lessIcon\n        };\n      })\n    );\n\n    // Subscribe to share buttons config changes, This updates the component whenever a new button is added\n    this._configSub$ = this._share.config$.subscribe((config: ShareButtonsConfig) => {\n      // Use global include buttons, otherwise fallback to all buttons\n      const includedButtons = config.include.length ? config.include : Object.keys(SHARE_BUTTONS);\n      const userButtons = includedButtons.filter((btn) => config.exclude.indexOf(btn) < 0);\n      this.updateState({\n        userButtons,\n        expanded: false,\n        moreIcon: config.moreButtonIcon,\n        lessIcon: config.lessButtonIcon\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this._configSub$.unsubscribe();\n    this._state$.complete();\n  }\n\n  updateState(state: ButtonsState) {\n    this._state$.next({...this._state$.value, ...state});\n  }\n\n}\n\n/**\n * Explanation of the above code:\n * ------------------------------\n Include buttons: includes only wanted buttons and excludes the rest\n Exclude buttons: excludes only the unwanted buttons\n User buttons = Include buttons - exclude buttons\n Selected Buttons = User buttons [shown number]\n */\n","import { Component, Input, Output, ElementRef, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'expand-button',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <button class=\"sb-wrapper sb-expand sb-show-icon\"\n            [style.fontSize.px]=\"size\"\n            (click)=\"toggle.emit(!expanded)\">\n\n      <div class=\"sb-inner\">\n        <div class=\"sb-content\">\n          <div class=\"sb-icon\">\n            <fa-icon [icon]=\"expanded ? lessIcon : moreIcon\"></fa-icon>\n          </div>\n        </div>\n      </div>\n    </button>\n  `\n})\nexport class ExpandButton {\n\n  @Input() moreIcon: any;\n  @Input() lessIcon: any;\n  @Input() expanded: string;\n  @Input() size: number;\n  @Output() toggle = new EventEmitter<boolean>();\n\n  constructor(el: ElementRef) {\n    el.nativeElement.style.setProperty('--button-color', '#FF6651');\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ShareButtonsConfig, SHARE_BUTTONS_CONFIG } from '@ngx-share/core';\nimport { ShareButtonModule } from '@ngx-share/button';\n\nimport { ShareButtons } from './share-buttons';\nimport { ExpandButton } from './expand-button';\n\n@NgModule({\n  declarations: [\n    ShareButtons,\n    ExpandButton\n  ],\n  imports: [\n    ShareButtonModule,\n    CommonModule\n  ],\n  exports: [\n    ShareButtonModule,\n    ShareButtons\n  ]\n})\nexport class ShareButtonsModule {\n  static withConfig(config?: ShareButtonsConfig): ModuleWithProviders {\n    return {\n      ngModule: ShareButtonsModule,\n      providers: [{provide: SHARE_BUTTONS_CONFIG, useValue: config}]\n    };\n  }\n}\n"],"names":[],"mappings":"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"}
